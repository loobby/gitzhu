<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.zy.dao.AuthInfoMapper" >
<resultMap id="AuthInfoMap" type="com.zy.vo.AuthInfo" >
    <id column="auth_id" property="authId" jdbcType="INTEGER" />
    <result column="parent_id" property="parentId" jdbcType="INTEGER" />
    <result column="auth_name" property="authName" jdbcType="VARCHAR" />
    <result column="auth_desc" property="authDesc" jdbcType="VARCHAR" />
    <result column="auth_grade" property="authGrade" jdbcType="INTEGER" />
    <result column="auth_type" property="authType" jdbcType="CHAR" />
    <result column="auth_url" property="authUrl" jdbcType="VARCHAR" />
    <result column="auth_code" property="authCode" jdbcType="VARCHAR" />
    <result column="auth_order" property="authOrder" jdbcType="INTEGER" />
    <result column="auth_state" property="authState" jdbcType="CHAR" />
    <result column="create_by" property="createBy" jdbcType="INTEGER" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_by" property="updateBy" jdbcType="INTEGER" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
  </resultMap>
  
  <select id="selectAuthinfo" resultMap="AuthInfoMap" parameterType="HashMap">

		SELECT * FROM auth_info WHERE auth_id IN
		(SELECT auth_id FROM user_auth WHERE user_id=#{userId}) AND auth_state=1 AND parent_id=#{authId}
		UNION
		SELECT * FROM auth_info WHERE auth_id IN
		(SELECT auth_id FROM user_role ur,role_auth ra WHERE ra.role_id=ur.role_id AND ur.user_id=#{userId})
		AND auth_state=1 AND parent_id=#{authId}
		UNION
		SELECT * FROM auth_info WHERE auth_id IN
		(SELECT auth_id FROM role_auth WHERE role_id IN
		(SELECT gr.role_id FROM group_role gr,role r WHERE gr.role_id=r.role_id AND r.role_state=1 AND group_id IN
		(SELECT ui.group_id FROM user_info ui,user_group ug WHERE ui.group_id= ug.group_id AND ug.group_state=1 AND ui.user_id=#{userId})))
		AND auth_state=1 AND parent_id=#{authId}
  </select>
  
  <select id="authinfo" resultMap="AuthInfoMap"><!-- 查询全部权限 -->
			select * from auth_info
	</select>
  
    <update id="updateAuth"  parameterType="AuthInfo"><!--  修改权限信息-->
  			UPDATE auth_info SET auth_name=#{authName},auth_desc=#{authDesc}
  				 WHERE auth_id =#{authId}
 	 </update>
     <update id="upAuth"  parameterType="AuthInfo"><!--  修改权限状态-->
  			UPDATE auth_info SET auth_state=#{authState}
  				 WHERE auth_id =#{authId}
  	</update>
  	   <update id="upAuths"  parameterType="AuthInfo"><!--  修改子权限状态-->
  			UPDATE auth_info SET auth_state=#{authState}
  				 WHERE parent_id =#{authId}
  	</update>
 
  		<sql id="AuthInfo_sql">
  			<if test="authName!=null">
  				  and auth_name=#{authName}
  			</if>
	  		<if test="authUrl!=null">
	  				and auth_url=#{authUrl}
	  		</if>
	  		<if test="authCode!=null">
	  				and auth_code=#{authCode}
	  		</if>
  </sql>

 <select id="findname" parameterType="AuthInfo"  resultMap="AuthInfoMap"><!-- //判断添加唯一 性-->
		select * from auth_info		
		<where>
            <include refid="AuthInfo_sql"></include>
        </where>  
  </select>
  
  
  
  	  <insert id="insert" parameterType="com.zy.vo.AuthInfo" >
    insert into auth_info (auth_id, parent_id, auth_name, 
      auth_desc, auth_grade, auth_type, 
      auth_url, auth_code, auth_order, 
      auth_state, create_by, create_time, 
      update_by, update_time)
    values (#{authId,jdbcType=INTEGER}, #{parentId,jdbcType=INTEGER}, #{authName,jdbcType=VARCHAR}, 
      #{authDesc,jdbcType=VARCHAR}, #{authGrade,jdbcType=INTEGER}, #{authType,jdbcType=CHAR}, 
      #{authUrl,jdbcType=VARCHAR}, #{authCode,jdbcType=VARCHAR}, #{authOrder,jdbcType=INTEGER}, 
      #{authState,jdbcType=CHAR}, #{createBy,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, 
      #{updateBy,jdbcType=INTEGER}, #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertAuthInfo" parameterType="AuthInfo" ><!-- //添加用户 -->
    insert into auth_info
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="authId != null" >
        auth_id,
      </if>
      <if test="parentId != null" >
        parent_id,
      </if>
      <if test="authName != null" >
        auth_name,
      </if>
      <if test="authDesc != null" >
        auth_desc,
      </if>
      <if test="authGrade != null" >
        auth_grade,
      </if>
      <if test="authType != null" >
        auth_type,
      </if>
      <if test="authUrl != null" >
        auth_url,
      </if>
      <if test="authCode != null" >
        auth_code,
      </if>
      <if test="authOrder != null" >
        auth_order,
      </if>
      <if test="authState != null" >
        auth_state,
      </if>
      <if test="createBy != null" >
        create_by,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateBy != null" >
        update_by,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="authId != null" >
        #{authId,jdbcType=INTEGER},
      </if>
      <if test="parentId != null" >
        #{parentId,jdbcType=INTEGER},
      </if>
      <if test="authName != null" >
        #{authName,jdbcType=VARCHAR},
      </if>
      <if test="authDesc != null" >
        #{authDesc,jdbcType=VARCHAR},
      </if>
      <if test="authGrade != null" >
        #{authGrade,jdbcType=INTEGER},
      </if>
      <if test="authType != null" >
        #{authType,jdbcType=CHAR},
      </if>
      <if test="authUrl != null" >
        #{authUrl,jdbcType=VARCHAR},
      </if>
      <if test="authCode != null" >
        #{authCode,jdbcType=VARCHAR},
      </if>
      <if test="authOrder != null" >
        #{authOrder,jdbcType=INTEGER},
      </if>
      <if test="authState != null" >
        #{authState,jdbcType=CHAR},
      </if>
      <if test="createBy != null" >
        #{createBy,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateBy != null" >
        #{updateBy,jdbcType=INTEGER},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>	
  		
  		
  		
  		
  		
</mapper>